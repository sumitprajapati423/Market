{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Inject, ContentChild, Input, Component, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nconst _c0 = [\"*\"];\n\nclass BitDraggingHandleDirective {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n  }\n\n}\n\nBitDraggingHandleDirective.ɵfac = function BitDraggingHandleDirective_Factory(t) {\n  return new (t || BitDraggingHandleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nBitDraggingHandleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BitDraggingHandleDirective,\n  selectors: [[\"\", \"dragginghandle\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BitDraggingHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[dragginghandle]\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n\nclass BitDraggingDirective {\n  constructor(elementRef, document) {\n    this.elementRef = elementRef;\n    this.document = document;\n    this.subscriptions = [];\n  }\n\n  ngAfterViewInit() {\n    var _a, _b;\n\n    this.draggingBoundaryElement = this.document.querySelector(this.boundaryQuery);\n\n    if (!this.draggingBoundaryElement) {\n      throw new Error(\"Couldn't find any element with query: \" + this.boundaryQuery);\n    } else {\n      this.element = this.elementRef.nativeElement;\n      this.handleElement = ((_b = (_a = this.handle) === null || _a === void 0 ? void 0 : _a.elementRef) === null || _b === void 0 ? void 0 : _b.nativeElement) || this.element;\n      this.initDrag();\n    }\n  }\n\n  initDrag() {\n    const dragStart$ = fromEvent(this.handleElement, \"mousedown\");\n    const dragEnd$ = fromEvent(this.document, \"mouseup\");\n    const drag$ = fromEvent(this.document, \"mousemove\").pipe(takeUntil(dragEnd$));\n    let initialX,\n        initialY,\n        currentX = 0,\n        currentY = 0;\n    let dragSub;\n    const minBoundX = this.draggingBoundaryElement.offsetLeft;\n    const minBoundY = this.draggingBoundaryElement.offsetTop;\n    const maxBoundX = minBoundX + this.draggingBoundaryElement.offsetWidth - this.element.offsetWidth;\n    const maxBoundY = minBoundY + this.draggingBoundaryElement.offsetHeight - this.element.offsetHeight;\n    const dragStartSub = dragStart$.subscribe(event => {\n      initialX = event.clientX - currentX;\n      initialY = event.clientY - currentY;\n      this.element.classList.add(\"free-dragging\");\n      dragSub = drag$.subscribe(event => {\n        event.preventDefault();\n        const x = event.clientX - initialX;\n        const y = event.clientY - initialY;\n        currentX = Math.max(minBoundX, Math.min(x, maxBoundX));\n        currentY = Math.max(minBoundY, Math.min(y, maxBoundY));\n        this.element.style.transform = \"translate3d(\" + currentX + \"px, \" + currentY + \"px, 0)\";\n      });\n    });\n    const dragEndSub = dragEnd$.subscribe(() => {\n      initialX = currentX;\n      initialY = currentY;\n      this.element.classList.remove(\"free-dragging\");\n\n      if (dragSub) {\n        dragSub.unsubscribe();\n      }\n    });\n    this.subscriptions.push.apply(this.subscriptions, [dragStartSub, dragSub, dragEndSub]);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s === null || s === void 0 ? void 0 : s.unsubscribe());\n  }\n\n}\n\nBitDraggingDirective.ɵfac = function BitDraggingDirective_Factory(t) {\n  return new (t || BitDraggingDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nBitDraggingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BitDraggingDirective,\n  selectors: [[\"\", \"dragging\", \"\"]],\n  contentQueries: function BitDraggingDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, BitDraggingHandleDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.handle = _t.first);\n    }\n  },\n  inputs: {\n    boundaryQuery: \"boundaryQuery\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BitDraggingDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[dragging]\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    handle: [{\n      type: ContentChild,\n      args: [BitDraggingHandleDirective]\n    }],\n    boundaryQuery: [{\n      type: Input\n    }]\n  });\n})();\n\nclass DraggableComponent {\n  constructor() {\n    this.Boundry = \"body\";\n  }\n\n}\n\nDraggableComponent.ɵfac = function DraggableComponent_Factory(t) {\n  return new (t || DraggableComponent)();\n};\n\nDraggableComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DraggableComponent,\n  selectors: [[\"Bit-draggable\"]],\n  inputs: {\n    Boundry: \"Boundry\"\n  },\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 1,\n  consts: [[\"dragging\", \"\", \"draggable\", \"true\", 2, \"position\", \"absolute\", \"top\", \"0\", \"left\", \"0\", 3, \"boundaryQuery\"]],\n  template: function DraggableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"boundaryQuery\", ctx.Boundry);\n    }\n  },\n  directives: [BitDraggingDirective],\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DraggableComponent, [{\n    type: Component,\n    args: [{\n      selector: 'Bit-draggable',\n      template: \"<div dragging draggable=\\\"true\\\" [boundaryQuery]=\\\"Boundry\\\" style=\\\"position: absolute; top: 0; left: 0;\\\">\\n <ng-content></ng-content>\\n  </div>\",\n      styles: [\"\"]\n    }]\n  }], null, {\n    Boundry: [{\n      type: Input\n    }]\n  });\n})();\n\nclass BitdraggableModule {}\n\nBitdraggableModule.ɵfac = function BitdraggableModule_Factory(t) {\n  return new (t || BitdraggableModule)();\n};\n\nBitdraggableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BitdraggableModule\n});\nBitdraggableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BitdraggableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DraggableComponent, BitDraggingDirective, BitDraggingHandleDirective],\n      imports: [CommonModule],\n      exports: [DraggableComponent, BitDraggingDirective, BitDraggingHandleDirective]\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of bitdraggable\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { BitDraggingDirective, BitDraggingHandleDirective, BitdraggableModule, DraggableComponent };","map":{"version":3,"sources":["C:/Users/Sunil/Desktop/Angular 13/ang13/node_modules/@bitbeast/bitdraggable/fesm2015/bitbeast-bitdraggable.mjs"],"names":["i0","Directive","Inject","ContentChild","Input","Component","NgModule","DOCUMENT","CommonModule","fromEvent","takeUntil","BitDraggingHandleDirective","constructor","elementRef","ɵfac","ElementRef","ɵdir","type","args","selector","BitDraggingDirective","document","subscriptions","ngAfterViewInit","_a","_b","draggingBoundaryElement","querySelector","boundaryQuery","Error","element","nativeElement","handleElement","handle","initDrag","dragStart$","dragEnd$","drag$","pipe","initialX","initialY","currentX","currentY","dragSub","minBoundX","offsetLeft","minBoundY","offsetTop","maxBoundX","offsetWidth","maxBoundY","offsetHeight","dragStartSub","subscribe","event","clientX","clientY","classList","add","preventDefault","x","y","Math","max","min","style","transform","dragEndSub","remove","unsubscribe","push","apply","ngOnDestroy","forEach","s","undefined","decorators","DraggableComponent","Boundry","ɵcmp","template","styles","BitdraggableModule","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Inject, ContentChild, Input, Component, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nclass BitDraggingHandleDirective {\r\n    constructor(elementRef) {\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nBitDraggingHandleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BitDraggingHandleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nBitDraggingHandleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: BitDraggingHandleDirective, selector: \"[dragginghandle]\", ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BitDraggingHandleDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"[dragginghandle]\",\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\nclass BitDraggingDirective {\r\n    constructor(elementRef, document) {\r\n        this.elementRef = elementRef;\r\n        this.document = document;\r\n        this.subscriptions = [];\r\n    }\r\n    ngAfterViewInit() {\r\n        var _a, _b;\r\n        this.draggingBoundaryElement = this.document.querySelector(this.boundaryQuery);\r\n        if (!this.draggingBoundaryElement) {\r\n            throw new Error(\"Couldn't find any element with query: \" + this.boundaryQuery);\r\n        }\r\n        else {\r\n            this.element = this.elementRef.nativeElement;\r\n            this.handleElement =\r\n                ((_b = (_a = this.handle) === null || _a === void 0 ? void 0 : _a.elementRef) === null || _b === void 0 ? void 0 : _b.nativeElement) || this.element;\r\n            this.initDrag();\r\n        }\r\n    }\r\n    initDrag() {\r\n        const dragStart$ = fromEvent(this.handleElement, \"mousedown\");\r\n        const dragEnd$ = fromEvent(this.document, \"mouseup\");\r\n        const drag$ = fromEvent(this.document, \"mousemove\").pipe(takeUntil(dragEnd$));\r\n        let initialX, initialY, currentX = 0, currentY = 0;\r\n        let dragSub;\r\n        const minBoundX = this.draggingBoundaryElement.offsetLeft;\r\n        const minBoundY = this.draggingBoundaryElement.offsetTop;\r\n        const maxBoundX = minBoundX +\r\n            this.draggingBoundaryElement.offsetWidth -\r\n            this.element.offsetWidth;\r\n        const maxBoundY = minBoundY +\r\n            this.draggingBoundaryElement.offsetHeight -\r\n            this.element.offsetHeight;\r\n        const dragStartSub = dragStart$.subscribe((event) => {\r\n            initialX = event.clientX - currentX;\r\n            initialY = event.clientY - currentY;\r\n            this.element.classList.add(\"free-dragging\");\r\n            dragSub = drag$.subscribe((event) => {\r\n                event.preventDefault();\r\n                const x = event.clientX - initialX;\r\n                const y = event.clientY - initialY;\r\n                currentX = Math.max(minBoundX, Math.min(x, maxBoundX));\r\n                currentY = Math.max(minBoundY, Math.min(y, maxBoundY));\r\n                this.element.style.transform =\r\n                    \"translate3d(\" + currentX + \"px, \" + currentY + \"px, 0)\";\r\n            });\r\n        });\r\n        const dragEndSub = dragEnd$.subscribe(() => {\r\n            initialX = currentX;\r\n            initialY = currentY;\r\n            this.element.classList.remove(\"free-dragging\");\r\n            if (dragSub) {\r\n                dragSub.unsubscribe();\r\n            }\r\n        });\r\n        this.subscriptions.push.apply(this.subscriptions, [\r\n            dragStartSub,\r\n            dragSub,\r\n            dragEndSub,\r\n        ]);\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((s) => s === null || s === void 0 ? void 0 : s.unsubscribe());\r\n    }\r\n}\r\nBitDraggingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BitDraggingDirective, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nBitDraggingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: BitDraggingDirective, selector: \"[dragging]\", inputs: { boundaryQuery: \"boundaryQuery\" }, queries: [{ propertyName: \"handle\", first: true, predicate: BitDraggingHandleDirective, descendants: true }], ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BitDraggingDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"[dragging]\",\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    }, propDecorators: { handle: [{\r\n                type: ContentChild,\r\n                args: [BitDraggingHandleDirective]\r\n            }], boundaryQuery: [{\r\n                type: Input\r\n            }] } });\n\nclass DraggableComponent {\r\n    constructor() {\r\n        this.Boundry = \"body\";\r\n    }\r\n}\r\nDraggableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DraggableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nDraggableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: DraggableComponent, selector: \"Bit-draggable\", inputs: { Boundry: \"Boundry\" }, ngImport: i0, template: \"<div dragging draggable=\\\"true\\\" [boundaryQuery]=\\\"Boundry\\\" style=\\\"position: absolute; top: 0; left: 0;\\\">\\n <ng-content></ng-content>\\n  </div>\", styles: [\"\"], directives: [{ type: BitDraggingDirective, selector: \"[dragging]\", inputs: [\"boundaryQuery\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DraggableComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'Bit-draggable', template: \"<div dragging draggable=\\\"true\\\" [boundaryQuery]=\\\"Boundry\\\" style=\\\"position: absolute; top: 0; left: 0;\\\">\\n <ng-content></ng-content>\\n  </div>\", styles: [\"\"] }]\r\n        }], propDecorators: { Boundry: [{\r\n                type: Input\r\n            }] } });\n\nclass BitdraggableModule {\r\n}\r\nBitdraggableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BitdraggableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nBitdraggableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BitdraggableModule, declarations: [DraggableComponent,\r\n        BitDraggingDirective,\r\n        BitDraggingHandleDirective], imports: [CommonModule], exports: [DraggableComponent,\r\n        BitDraggingDirective,\r\n        BitDraggingHandleDirective] });\r\nBitdraggableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BitdraggableModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BitdraggableModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        DraggableComponent,\r\n                        BitDraggingDirective,\r\n                        BitDraggingHandleDirective\r\n                    ],\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    exports: [\r\n                        DraggableComponent,\r\n                        BitDraggingDirective,\r\n                        BitDraggingHandleDirective\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of bitdraggable\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { BitDraggingDirective, BitDraggingHandleDirective, BitdraggableModule, DraggableComponent };\n"]},"metadata":{},"sourceType":"module"}