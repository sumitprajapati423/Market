{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Sunil\\\\Desktop\\\\Angular 13\\\\ang13\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { WebPlugin } from '@capacitor/core';\nexport class ShareWeb extends WebPlugin {\n  canShare() {\n    return _asyncToGenerator(function* () {\n      if (typeof navigator === 'undefined' || !navigator.share) {\n        return {\n          value: false\n        };\n      } else {\n        return {\n          value: true\n        };\n      }\n    })();\n  }\n\n  share(options) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (typeof navigator === 'undefined' || !navigator.share) {\n        throw _this.unavailable('Share API not available in this browser');\n      }\n\n      yield navigator.share({\n        title: options.title,\n        text: options.text,\n        url: options.url\n      });\n      return {};\n    })();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Sunil/Desktop/Angular 13/ang13/node_modules/@capacitor/share/dist/esm/web.js"],"names":["WebPlugin","ShareWeb","canShare","navigator","share","value","options","unavailable","title","text","url"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAO,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC9BE,EAAAA,QAAQ,GAAG;AAAA;AACb,UAAI,OAAOC,SAAP,KAAqB,WAArB,IAAoC,CAACA,SAAS,CAACC,KAAnD,EAA0D;AACtD,eAAO;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAP;AACH,OAFD,MAGK;AACD,eAAO;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAP;AACH;AANY;AAOhB;;AACKD,EAAAA,KAAK,CAACE,OAAD,EAAU;AAAA;;AAAA;AACjB,UAAI,OAAOH,SAAP,KAAqB,WAArB,IAAoC,CAACA,SAAS,CAACC,KAAnD,EAA0D;AACtD,cAAM,KAAI,CAACG,WAAL,CAAiB,yCAAjB,CAAN;AACH;;AACD,YAAMJ,SAAS,CAACC,KAAV,CAAgB;AAClBI,QAAAA,KAAK,EAAEF,OAAO,CAACE,KADG;AAElBC,QAAAA,IAAI,EAAEH,OAAO,CAACG,IAFI;AAGlBC,QAAAA,GAAG,EAAEJ,OAAO,CAACI;AAHK,OAAhB,CAAN;AAKA,aAAO,EAAP;AATiB;AAUpB;;AAnBmC","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class ShareWeb extends WebPlugin {\n    async canShare() {\n        if (typeof navigator === 'undefined' || !navigator.share) {\n            return { value: false };\n        }\n        else {\n            return { value: true };\n        }\n    }\n    async share(options) {\n        if (typeof navigator === 'undefined' || !navigator.share) {\n            throw this.unavailable('Share API not available in this browser');\n        }\n        await navigator.share({\n            title: options.title,\n            text: options.text,\n            url: options.url,\n        });\n        return {};\n    }\n}\n"]},"metadata":{},"sourceType":"module"}