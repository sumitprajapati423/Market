{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from 'ngx-sharebuttons';\nimport { SHARE_BUTTONS, SHARE_BUTTONS_CONFIG } from 'ngx-sharebuttons';\nimport * as i2 from 'ngx-sharebuttons/button';\nimport { ShareButtonModule } from 'ngx-sharebuttons/button';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i1 from '@fortawesome/angular-fontawesome';\n\nfunction ShareButtons_div_0_share_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"share-button\", 3);\n    i0.ɵɵlistener(\"opened\", function ShareButtons_div_0_share_button_1_Template_share_button_opened_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.opened.emit($event);\n    })(\"closed\", function ShareButtons_div_0_share_button_1_Template_share_button_closed_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.closed.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const button_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"button\", button_r4)(\"theme\", ctx_r2.theme)(\"url\", ctx_r2.url)(\"title\", ctx_r2.title)(\"description\", ctx_r2.description)(\"image\", ctx_r2.image)(\"tags\", ctx_r2.tags)(\"autoSetMeta\", ctx_r2.autoSetMeta)(\"showIcon\", ctx_r2.showIcon)(\"showText\", ctx_r2.showText)(\"disabled\", ctx_r2.disabled);\n  }\n}\n\nfunction ShareButtons_div_0_expand_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"expand-button\", 4);\n    i0.ɵɵlistener(\"toggle\", function ShareButtons_div_0_expand_button_2_Template_expand_button_toggle_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.updateState({\n        expanded: $event\n      });\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"sb-button sb-\", ctx_r3.theme, \"\");\n    i0.ɵɵproperty(\"expanded\", state_r1.expanded)(\"moreIcon\", state_r1.moreIcon)(\"lessIcon\", state_r1.lessIcon)(\"moreAriaLabel\", state_r1.moreAriaLabel)(\"lessAriaLabel\", state_r1.lessAriaLabel);\n  }\n}\n\nfunction ShareButtons_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ShareButtons_div_0_share_button_1_Template, 1, 11, \"share-button\", 1);\n    i0.ɵɵtemplate(2, ShareButtons_div_0_expand_button_2_Template, 1, 8, \"expand-button\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"sb-group sb-\", ctx_r0.theme, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", state_r1.selectedButtons);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", state_r1.shownCount < state_r1.userButtons.length);\n  }\n}\n\nclass ExpandButton {\n  constructor(el) {\n    this.toggle = new EventEmitter();\n    el.nativeElement.style.setProperty('--button-color', '#FF6651');\n  }\n\n}\n\nExpandButton.ɵfac = function ExpandButton_Factory(t) {\n  return new (t || ExpandButton)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nExpandButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ExpandButton,\n  selectors: [[\"expand-button\"]],\n  inputs: {\n    moreIcon: \"moreIcon\",\n    lessIcon: \"lessIcon\",\n    expanded: \"expanded\",\n    moreAriaLabel: \"moreAriaLabel\",\n    lessAriaLabel: \"lessAriaLabel\"\n  },\n  outputs: {\n    toggle: \"toggle\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"sb-wrapper\", \"sb-expand\", \"sb-show-icon\", 3, \"click\"], [1, \"sb-content\"], [1, \"sb-icon\"], [3, \"icon\"]],\n  template: function ExpandButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ExpandButton_Template_button_click_0_listener() {\n        return ctx.toggle.emit(!ctx.expanded);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"fa-icon\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-label\", ctx.expanded ? ctx.lessAriaLabel : ctx.moreAriaLabel);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"icon\", ctx.expanded ? ctx.lessIcon : ctx.moreIcon);\n    }\n  },\n  directives: [i1.FaIconComponent],\n  styles: [\"[button=facebook][_nghost-%COMP%], [button=facebook]   [_nghost-%COMP%]{--button-color: #4267B2}[button=twitter][_nghost-%COMP%], [button=twitter]   [_nghost-%COMP%]{--button-color: #00acee}[button=google][_nghost-%COMP%], [button=google]   [_nghost-%COMP%]{--button-color: #db4437}[button=mix][_nghost-%COMP%], [button=mix]   [_nghost-%COMP%]{--button-color: #ff8226}[button=line][_nghost-%COMP%], [button=line]   [_nghost-%COMP%]{--button-color: #00b900}[button=linkedin][_nghost-%COMP%], [button=linkedin]   [_nghost-%COMP%]{--button-color: #006fa6}[button=pinterest][_nghost-%COMP%], [button=pinterest]   [_nghost-%COMP%]{--button-color: #bd081c}[button=reddit][_nghost-%COMP%], [button=reddit]   [_nghost-%COMP%]{--button-color: #ff4006}[button=tumblr][_nghost-%COMP%], [button=tumblr]   [_nghost-%COMP%]{--button-color: #36465d}[button=whatsapp][_nghost-%COMP%], [button=whatsapp]   [_nghost-%COMP%]{--button-color: #25d366}[button=messenger][_nghost-%COMP%], [button=messenger]   [_nghost-%COMP%]{--button-color: #0080FF}[button=telegram][_nghost-%COMP%], [button=telegram]   [_nghost-%COMP%]{--button-color: #0088cc}[button=xing][_nghost-%COMP%], [button=xing]   [_nghost-%COMP%]{--button-color: #006567}[button=sms][_nghost-%COMP%], [button=sms]   [_nghost-%COMP%]{--button-color: #20c16c}[button=email][_nghost-%COMP%], [button=email]   [_nghost-%COMP%]{--button-color: #FF961C}[button=viber][_nghost-%COMP%], [button=viber]   [_nghost-%COMP%]{--button-color: #665ca7}[button=vk][_nghost-%COMP%], [button=vk]   [_nghost-%COMP%]{--button-color: #4C75A3}[button=copy][_nghost-%COMP%], [button=copy]   [_nghost-%COMP%]{--button-color: #607D8B}[button=print][_nghost-%COMP%], [button=print]   [_nghost-%COMP%]{--button-color: #765AA2}[button=expand][_nghost-%COMP%], [button=expand]   [_nghost-%COMP%]{--button-color: #FF6651}button[_ngcontent-%COMP%]{cursor:pointer;position:relative;outline:0;-webkit-print-color-adjust:exact;margin:.3125em;margin:var(--sb-margin, .3125em);padding:0;padding:var(--sb-padding, 0);min-width:4.125em;min-width:var(--sb-min-width, 4.125em);height:2.5em;height:var(--sb-height, 2.5em);color:#fff;color:var(--sb-color, #fff);background:var(--sb-background);font-size:13px;font-size:var(--sb-font-size, 13px);line-height:2.571em;line-height:var(--sb-line-height, 2.571em);border:var(--sb-border);border-radius:var(--sb-border-radius);transition:var(--sb-transition);box-shadow:var(--sb-box-shadow);text-shadow:var(--sb-text-shadow);overflow:var(--sb-overflow)}.sb-icon[_ngcontent-%COMP%], .sb-text[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;user-select:none}.sb-content[_ngcontent-%COMP%]{flex:1;display:flex;height:100%;width:100%;position:relative}.sb-text[_ngcontent-%COMP%]{flex:1;height:100%;white-space:nowrap;padding:0 .7em;padding:var(--sb-text-padding, 0 .7em);font-weight:700;font-weight:var(--sb-font-weight, bold)}.sb-icon[_ngcontent-%COMP%]{text-align:center;width:100%;height:100%;min-width:2em;font-size:1.2em;font-size:var(--sb-icon-size, 1.2em)}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExpandButton, [{\n    type: Component,\n    args: [{\n      selector: 'expand-button',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <button class=\"sb-wrapper sb-expand sb-show-icon\"\n            [attr.aria-label]=\"expanded ? lessAriaLabel : moreAriaLabel\"\n            (click)=\"toggle.emit(!expanded)\">\n\n      <div class=\"sb-content\">\n        <div class=\"sb-icon\">\n          <fa-icon [icon]=\"expanded ? lessIcon : moreIcon\"></fa-icon>\n        </div>\n      </div>\n    </button>\n  `,\n      styles: [\":host-context([button=facebook]){--button-color: #4267B2}:host-context([button=twitter]){--button-color: #00acee}:host-context([button=google]){--button-color: #db4437}:host-context([button=mix]){--button-color: #ff8226}:host-context([button=line]){--button-color: #00b900}:host-context([button=linkedin]){--button-color: #006fa6}:host-context([button=pinterest]){--button-color: #bd081c}:host-context([button=reddit]){--button-color: #ff4006}:host-context([button=tumblr]){--button-color: #36465d}:host-context([button=whatsapp]){--button-color: #25d366}:host-context([button=messenger]){--button-color: #0080FF}:host-context([button=telegram]){--button-color: #0088cc}:host-context([button=xing]){--button-color: #006567}:host-context([button=sms]){--button-color: #20c16c}:host-context([button=email]){--button-color: #FF961C}:host-context([button=viber]){--button-color: #665ca7}:host-context([button=vk]){--button-color: #4C75A3}:host-context([button=copy]){--button-color: #607D8B}:host-context([button=print]){--button-color: #765AA2}:host-context([button=expand]){--button-color: #FF6651}button{cursor:pointer;position:relative;outline:0;-webkit-print-color-adjust:exact;margin:.3125em;margin:var(--sb-margin, .3125em);padding:0;padding:var(--sb-padding, 0);min-width:4.125em;min-width:var(--sb-min-width, 4.125em);height:2.5em;height:var(--sb-height, 2.5em);color:#fff;color:var(--sb-color, #fff);background:var(--sb-background);font-size:13px;font-size:var(--sb-font-size, 13px);line-height:2.571em;line-height:var(--sb-line-height, 2.571em);border:var(--sb-border);border-radius:var(--sb-border-radius);transition:var(--sb-transition);box-shadow:var(--sb-box-shadow);text-shadow:var(--sb-text-shadow);overflow:var(--sb-overflow)}.sb-icon,.sb-text{display:flex;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;user-select:none}.sb-content{flex:1;display:flex;height:100%;width:100%;position:relative}.sb-text{flex:1;height:100%;white-space:nowrap;padding:0 .7em;padding:var(--sb-text-padding, 0 .7em);font-weight:700;font-weight:var(--sb-font-weight, bold)}.sb-icon{text-align:center;width:100%;height:100%;min-width:2em;font-size:1.2em;font-size:var(--sb-icon-size, 1.2em)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    moreIcon: [{\n      type: Input\n    }],\n    lessIcon: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    moreAriaLabel: [{\n      type: Input\n    }],\n    lessAriaLabel: [{\n      type: Input\n    }],\n    toggle: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ShareButtons {\n  constructor(_share) {\n    this._share = _share;\n    this._state$ = new BehaviorSubject({\n      includedButtons: [],\n      excludedButtons: [],\n      userButtons: [],\n      selectedButtons: [],\n      expanded: true,\n      shownCount: Object.keys(SHARE_BUTTONS).length\n    });\n    this._configSub$ = Subscription.EMPTY;\n    this.theme = this._share.config.theme;\n    /** Show buttons icons */\n\n    this.showIcon = true;\n    /** Show buttons text */\n\n    this.showText = false;\n    /** Share dialog opened event */\n\n    this.opened = new EventEmitter();\n    /** Share dialog closed event */\n\n    this.closed = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.state$ = this._state$.pipe(map(state => {\n      // Use component include buttons, otherwise fallback to global include buttons\n      const includedButtons = state.includedButtons && state.includedButtons.length ? state.includedButtons : state.userButtons;\n      const userButtons = state.excludedButtons ? includedButtons.filter(btn => state.excludedButtons.indexOf(btn) < 0) : includedButtons;\n      const selectedButtons = userButtons.slice(0, state.expanded ? userButtons.length : state.shownCount);\n      return {\n        userButtons,\n        selectedButtons,\n        expanded: state.expanded,\n        shownCount: state.shownCount,\n        moreIcon: state.moreIcon,\n        lessIcon: state.lessIcon,\n        moreAriaLabel: state.moreAriaLabel,\n        lessAriaLabel: state.lessAriaLabel\n      };\n    })); // Subscribe to share buttons config changes, This updates the component whenever a new button is added\n\n    this._configSub$ = this._share.config$.subscribe(config => {\n      // Use global include buttons, otherwise fallback to all buttons\n      const includedButtons = config.include.length ? config.include : Object.keys(SHARE_BUTTONS);\n      const userButtons = includedButtons.filter(btn => config.exclude.indexOf(btn) < 0);\n      this.updateState({\n        userButtons,\n        expanded: false,\n        moreIcon: config.moreButtonIcon,\n        lessIcon: config.lessButtonIcon,\n        moreAriaLabel: config.moreButtonAriaLabel,\n        lessAriaLabel: config.lessButtonAriaLabel\n      });\n    });\n  }\n\n  ngOnChanges(changes) {\n    const shouldUpdate = changes['include'] && changes['include'].currentValue !== changes['include'].previousValue || changes['exclude'] && changes['exclude'].currentValue !== changes['exclude'].previousValue || changes['show'] && changes['show'].currentValue !== changes['show'].previousValue;\n\n    if (shouldUpdate) {\n      this.updateState({\n        includedButtons: this.include,\n        excludedButtons: this.exclude,\n        shownCount: this.show\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this._configSub$.unsubscribe();\n\n    this._state$.complete();\n  }\n\n  updateState(state) {\n    this._state$.next(Object.assign(Object.assign({}, this._state$.value), state));\n  }\n\n}\n\nShareButtons.ɵfac = function ShareButtons_Factory(t) {\n  return new (t || ShareButtons)(i0.ɵɵdirectiveInject(i1$1.ShareService));\n};\n\nShareButtons.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ShareButtons,\n  selectors: [[\"share-buttons\"]],\n  inputs: {\n    theme: \"theme\",\n    include: \"include\",\n    exclude: \"exclude\",\n    show: \"show\",\n    url: \"url\",\n    title: \"title\",\n    description: \"description\",\n    image: \"image\",\n    tags: \"tags\",\n    autoSetMeta: \"autoSetMeta\",\n    showIcon: \"showIcon\",\n    showText: \"showText\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    opened: \"opened\",\n    closed: \"closed\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[3, \"class\", 4, \"ngIf\"], [3, \"button\", \"theme\", \"url\", \"title\", \"description\", \"image\", \"tags\", \"autoSetMeta\", \"showIcon\", \"showText\", \"disabled\", \"opened\", \"closed\", 4, \"ngFor\", \"ngForOf\"], [3, \"class\", \"expanded\", \"moreIcon\", \"lessIcon\", \"moreAriaLabel\", \"lessAriaLabel\", \"toggle\", 4, \"ngIf\"], [3, \"button\", \"theme\", \"url\", \"title\", \"description\", \"image\", \"tags\", \"autoSetMeta\", \"showIcon\", \"showText\", \"disabled\", \"opened\", \"closed\"], [3, \"expanded\", \"moreIcon\", \"lessIcon\", \"moreAriaLabel\", \"lessAriaLabel\", \"toggle\"]],\n  template: function ShareButtons_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ShareButtons_div_0_Template, 3, 5, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.state$));\n    }\n  },\n  directives: [i2.ShareButton, ExpandButton, i4.NgIf, i4.NgForOf],\n  pipes: [i4.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{display:inherit}.sb-group[_ngcontent-%COMP%], .sb-button[_ngcontent-%COMP%]{display:inline-flex;align-items:flex-start}.sb-group[_ngcontent-%COMP%]{flex-wrap:wrap}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShareButtons, [{\n    type: Component,\n    args: [{\n      selector: 'share-buttons',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div *ngIf=\\\"state$ | async; let state\\\" class=\\\"sb-group sb-{{theme}}\\\">\\n  <share-button *ngFor=\\\"let button of state.selectedButtons\\\"\\n                [button]=\\\"button\\\"\\n                [theme]=\\\"theme\\\"\\n                [url]=\\\"url\\\"\\n                [title]=\\\"title\\\"\\n                [description]=\\\"description\\\"\\n                [image]=\\\"image\\\"\\n                [tags]=\\\"tags\\\"\\n                [autoSetMeta]=\\\"autoSetMeta\\\"\\n                [showIcon]=\\\"showIcon\\\"\\n                [showText]=\\\"showText\\\"\\n                (opened)=\\\"opened.emit($event)\\\"\\n                (closed)=\\\"closed.emit($event)\\\"\\n                [disabled]=\\\"disabled\\\">\\n  </share-button>\\n  <expand-button *ngIf=\\\"state.shownCount < state.userButtons.length\\\"\\n                 class=\\\"sb-button sb-{{theme}}\\\"\\n                 [expanded]=\\\"state.expanded\\\"\\n                 [moreIcon]=\\\"state.moreIcon\\\"\\n                 [lessIcon]=\\\"state.lessIcon\\\"\\n                 [moreAriaLabel]=\\\"state.moreAriaLabel\\\"\\n                 [lessAriaLabel]=\\\"state.lessAriaLabel\\\"\\n                 (toggle)=\\\"updateState({expanded: $event})\\\">\\n  </expand-button>\\n</div>\\n\",\n      styles: [\":host{display:inherit}.sb-group,.sb-button{display:inline-flex;align-items:flex-start}.sb-group{flex-wrap:wrap}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i1$1.ShareService\n    }];\n  }, {\n    theme: [{\n      type: Input\n    }],\n    include: [{\n      type: Input\n    }],\n    exclude: [{\n      type: Input\n    }],\n    show: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    description: [{\n      type: Input\n    }],\n    image: [{\n      type: Input\n    }],\n    tags: [{\n      type: Input\n    }],\n    autoSetMeta: [{\n      type: Input\n    }],\n    showIcon: [{\n      type: Input\n    }],\n    showText: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    opened: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ShareButtonsModule {\n  static withConfig(config) {\n    return {\n      ngModule: ShareButtonsModule,\n      providers: [{\n        provide: SHARE_BUTTONS_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n\n}\n\nShareButtonsModule.ɵfac = function ShareButtonsModule_Factory(t) {\n  return new (t || ShareButtonsModule)();\n};\n\nShareButtonsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ShareButtonsModule\n});\nShareButtonsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ShareButtonModule, CommonModule], ShareButtonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShareButtonsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ShareButtons, ExpandButton],\n      imports: [ShareButtonModule, CommonModule],\n      exports: [ShareButtonModule, ShareButtons]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ShareButtons, ShareButtonsModule };","map":{"version":3,"sources":["C:/Users/Sunil/Desktop/Angular 13/ang13/node_modules/ngx-sharebuttons/fesm2015/ngx-sharebuttons-buttons.mjs"],"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","NgModule","i4","CommonModule","i1$1","SHARE_BUTTONS","SHARE_BUTTONS_CONFIG","i2","ShareButtonModule","BehaviorSubject","Subscription","map","i1","ExpandButton","constructor","el","toggle","nativeElement","style","setProperty","ɵfac","ElementRef","ɵcmp","FaIconComponent","type","args","selector","changeDetection","OnPush","template","styles","moreIcon","lessIcon","expanded","moreAriaLabel","lessAriaLabel","ShareButtons","_share","_state$","includedButtons","excludedButtons","userButtons","selectedButtons","shownCount","Object","keys","length","_configSub$","EMPTY","theme","config","showIcon","showText","opened","closed","ngOnInit","state$","pipe","state","filter","btn","indexOf","slice","config$","subscribe","include","exclude","updateState","moreButtonIcon","lessButtonIcon","moreButtonAriaLabel","lessButtonAriaLabel","ngOnChanges","changes","shouldUpdate","currentValue","previousValue","show","ngOnDestroy","unsubscribe","complete","next","assign","value","ShareService","ShareButton","NgIf","NgForOf","AsyncPipe","url","title","description","image","tags","autoSetMeta","disabled","ShareButtonsModule","withConfig","ngModule","providers","provide","useValue","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,uBAAlC,EAA2DC,KAA3D,EAAkEC,MAAlE,EAA0EC,QAA1E,QAA0F,eAA1F;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,IAAZ,MAAsB,kBAAtB;AACA,SAASC,aAAT,EAAwBC,oBAAxB,QAAoD,kBAApD;AACA,OAAO,KAAKC,EAAZ,MAAoB,yBAApB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,MAA9C;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,kCAApB;;;;gBAQ+FjB,E;;AAAAA,IAAAA,EAoHyd,qC;AApHzdA,IAAAA,EAoHq6B;AApHr6BA,MAAAA,EAoHq6B;AAAA,qBApHr6BA,EAoHq6B;AAAA,aAAW,0BAAX;AAAA;AApHr6BA,MAAAA,EAoHq6B;AAAA,qBApHr6BA,EAoHq6B;AAAA,aAA6D,0BAA7D;AAAA,M;AApHr6BA,IAAAA,EAoHqiC,e;;;;;mBApHriCA,E;AAAAA,IAAAA,EAoHuiB,0S;;;;;;gBApHviBA,E;;AAAAA,IAAAA,EAoHwjC,sC;AApHxjCA,IAAAA,EAoHs8C;AApHt8CA,MAAAA,EAoHs8C;AAAA,qBApHt8CA,EAoHs8C;AAAA,aAAW;AAAA;AAAA,QAAX;AAAA,M;AApHt8CA,IAAAA,EAoHu/C,e;;;;qBApHv/CA,E;mBAAAA,E;AAAAA,IAAAA,EAoH+oC,0D;AApH/oCA,IAAAA,EAoHksC,0L;;;;;;AApHlsCA,IAAAA,EAoH4Y,yB;AApH5YA,IAAAA,EAoHyd,oF;AApHzdA,IAAAA,EAoHwjC,qF;AApHxjCA,IAAAA,EAoHygD,e;;;;;mBApHzgDA,E;AAAAA,IAAAA,EAoHqb,yD;AApHrbA,IAAAA,EAoH2f,a;AApH3fA,IAAAA,EAoH2f,gD;AApH3fA,IAAAA,EAoHwkC,a;AApHxkCA,IAAAA,EAoHwkC,sE;;;;AA1HvqC,MAAMkB,YAAN,CAAmB;AACfC,EAAAA,WAAW,CAACC,EAAD,EAAK;AACZ,SAAKC,MAAL,GAAc,IAAIpB,YAAJ,EAAd;AACAmB,IAAAA,EAAE,CAACE,aAAH,CAAiBC,KAAjB,CAAuBC,WAAvB,CAAmC,gBAAnC,EAAqD,SAArD;AACH;;AAJc;;AAMnBN,YAAY,CAACO,IAAb;AAAA,mBAAyGP,YAAzG,EAA+FlB,EAA/F,mBAAuIA,EAAE,CAAC0B,UAA1I;AAAA;;AACAR,YAAY,CAACS,IAAb,kBAD+F3B,EAC/F;AAAA,QAA6FkB,YAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD+FlB,MAAAA,EAE3F,+BADJ;AAD+FA,MAAAA,EAInF;AAAA,eAAS,8BAAT;AAAA,QAHZ;AAD+FA,MAAAA,EAMzF,yCALN;AAD+FA,MAAAA,EAQrF,2BAPV;AAD+FA,MAAAA,EASvF,mBARR;AAAA;;AAAA;AAD+FA,MAAAA,EAGnF,gFAFZ;AAD+FA,MAAAA,EAQ5E,aAPnB;AAD+FA,MAAAA,EAQ5E,+DAPnB;AAAA;AAAA;AAAA,eAW0uEiB,EAAE,CAACW,eAX7uE;AAAA;AAAA;AAAA;;AAYA;AAAA,qDAb+F5B,EAa/F,mBAA2FkB,YAA3F,EAAqH,CAAC;AAC1GW,IAAAA,IAAI,EAAE3B,SADoG;AAE1G4B,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,eAAZ;AAA6BC,MAAAA,eAAe,EAAE7B,uBAAuB,CAAC8B,MAAtE;AAA8EC,MAAAA,QAAQ,EAAG;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXmB;AAWdC,MAAAA,MAAM,EAAE,CAAC,orEAAD;AAXM,KAAD;AAFoG,GAAD,CAArH,EAc4B,YAAY;AAAE,WAAO,CAAC;AAAEN,MAAAA,IAAI,EAAE7B,EAAE,CAAC0B;AAAX,KAAD,CAAP;AAAmC,GAd7E,EAc+F;AAAEU,IAAAA,QAAQ,EAAE,CAAC;AAC5FP,MAAAA,IAAI,EAAEzB;AADsF,KAAD,CAAZ;AAE/EiC,IAAAA,QAAQ,EAAE,CAAC;AACXR,MAAAA,IAAI,EAAEzB;AADK,KAAD,CAFqE;AAI/EkC,IAAAA,QAAQ,EAAE,CAAC;AACXT,MAAAA,IAAI,EAAEzB;AADK,KAAD,CAJqE;AAM/EmC,IAAAA,aAAa,EAAE,CAAC;AAChBV,MAAAA,IAAI,EAAEzB;AADU,KAAD,CANgE;AAQ/EoC,IAAAA,aAAa,EAAE,CAAC;AAChBX,MAAAA,IAAI,EAAEzB;AADU,KAAD,CARgE;AAU/EiB,IAAAA,MAAM,EAAE,CAAC;AACTQ,MAAAA,IAAI,EAAExB;AADG,KAAD;AAVuE,GAd/F;AAAA;;AA4BA,MAAMoC,YAAN,CAAmB;AACftB,EAAAA,WAAW,CAACuB,MAAD,EAAS;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAe,IAAI7B,eAAJ,CAAoB;AAC/B8B,MAAAA,eAAe,EAAE,EADc;AAE/BC,MAAAA,eAAe,EAAE,EAFc;AAG/BC,MAAAA,WAAW,EAAE,EAHkB;AAI/BC,MAAAA,eAAe,EAAE,EAJc;AAK/BT,MAAAA,QAAQ,EAAE,IALqB;AAM/BU,MAAAA,UAAU,EAAEC,MAAM,CAACC,IAAP,CAAYxC,aAAZ,EAA2ByC;AANR,KAApB,CAAf;AAQA,SAAKC,WAAL,GAAmBrC,YAAY,CAACsC,KAAhC;AACA,SAAKC,KAAL,GAAa,KAAKZ,MAAL,CAAYa,MAAZ,CAAmBD,KAAhC;AACA;;AACA,SAAKE,QAAL,GAAgB,IAAhB;AACA;;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA;;AACA,SAAKC,MAAL,GAAc,IAAIzD,YAAJ,EAAd;AACA;;AACA,SAAK0D,MAAL,GAAc,IAAI1D,YAAJ,EAAd;AACH;;AACD2D,EAAAA,QAAQ,GAAG;AACP,SAAKC,MAAL,GAAc,KAAKlB,OAAL,CAAamB,IAAb,CAAkB9C,GAAG,CAAE+C,KAAD,IAAW;AAC3C;AACA,YAAMnB,eAAe,GAAGmB,KAAK,CAACnB,eAAN,IAAyBmB,KAAK,CAACnB,eAAN,CAAsBO,MAA/C,GAAwDY,KAAK,CAACnB,eAA9D,GAAgFmB,KAAK,CAACjB,WAA9G;AACA,YAAMA,WAAW,GAAGiB,KAAK,CAAClB,eAAN,GAAwBD,eAAe,CAACoB,MAAhB,CAAwBC,GAAD,IAASF,KAAK,CAAClB,eAAN,CAAsBqB,OAAtB,CAA8BD,GAA9B,IAAqC,CAArE,CAAxB,GAAkGrB,eAAtH;AACA,YAAMG,eAAe,GAAGD,WAAW,CAACqB,KAAZ,CAAkB,CAAlB,EAAqBJ,KAAK,CAACzB,QAAN,GAAiBQ,WAAW,CAACK,MAA7B,GAAsCY,KAAK,CAACf,UAAjE,CAAxB;AACA,aAAO;AACHF,QAAAA,WADG;AAEHC,QAAAA,eAFG;AAGHT,QAAAA,QAAQ,EAAEyB,KAAK,CAACzB,QAHb;AAIHU,QAAAA,UAAU,EAAEe,KAAK,CAACf,UAJf;AAKHZ,QAAAA,QAAQ,EAAE2B,KAAK,CAAC3B,QALb;AAMHC,QAAAA,QAAQ,EAAE0B,KAAK,CAAC1B,QANb;AAOHE,QAAAA,aAAa,EAAEwB,KAAK,CAACxB,aAPlB;AAQHC,QAAAA,aAAa,EAAEuB,KAAK,CAACvB;AARlB,OAAP;AAUH,KAfkC,CAArB,CAAd,CADO,CAiBP;;AACA,SAAKY,WAAL,GAAmB,KAAKV,MAAL,CAAY0B,OAAZ,CAAoBC,SAApB,CAA+Bd,MAAD,IAAY;AACzD;AACA,YAAMX,eAAe,GAAGW,MAAM,CAACe,OAAP,CAAenB,MAAf,GAAwBI,MAAM,CAACe,OAA/B,GAAyCrB,MAAM,CAACC,IAAP,CAAYxC,aAAZ,CAAjE;AACA,YAAMoC,WAAW,GAAGF,eAAe,CAACoB,MAAhB,CAAwBC,GAAD,IAASV,MAAM,CAACgB,OAAP,CAAeL,OAAf,CAAuBD,GAAvB,IAA8B,CAA9D,CAApB;AACA,WAAKO,WAAL,CAAiB;AACb1B,QAAAA,WADa;AAEbR,QAAAA,QAAQ,EAAE,KAFG;AAGbF,QAAAA,QAAQ,EAAEmB,MAAM,CAACkB,cAHJ;AAIbpC,QAAAA,QAAQ,EAAEkB,MAAM,CAACmB,cAJJ;AAKbnC,QAAAA,aAAa,EAAEgB,MAAM,CAACoB,mBALT;AAMbnC,QAAAA,aAAa,EAAEe,MAAM,CAACqB;AANT,OAAjB;AAQH,KAZkB,CAAnB;AAaH;;AACDC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAMC,YAAY,GAAID,OAAO,CAAC,SAAD,CAAP,IAAsBA,OAAO,CAAC,SAAD,CAAP,CAAmBE,YAAnB,KAAoCF,OAAO,CAAC,SAAD,CAAP,CAAmBG,aAA9E,IAChBH,OAAO,CAAC,SAAD,CAAP,IAAsBA,OAAO,CAAC,SAAD,CAAP,CAAmBE,YAAnB,KAAoCF,OAAO,CAAC,SAAD,CAAP,CAAmBG,aAD7D,IAEhBH,OAAO,CAAC,MAAD,CAAP,IAAmBA,OAAO,CAAC,MAAD,CAAP,CAAgBE,YAAhB,KAAiCF,OAAO,CAAC,MAAD,CAAP,CAAgBG,aAFzE;;AAGA,QAAIF,YAAJ,EAAkB;AACd,WAAKP,WAAL,CAAiB;AACb5B,QAAAA,eAAe,EAAE,KAAK0B,OADT;AAEbzB,QAAAA,eAAe,EAAE,KAAK0B,OAFT;AAGbvB,QAAAA,UAAU,EAAE,KAAKkC;AAHJ,OAAjB;AAKH;AACJ;;AACDC,EAAAA,WAAW,GAAG;AACV,SAAK/B,WAAL,CAAiBgC,WAAjB;;AACA,SAAKzC,OAAL,CAAa0C,QAAb;AACH;;AACDb,EAAAA,WAAW,CAACT,KAAD,EAAQ;AACf,SAAKpB,OAAL,CAAa2C,IAAb,CAAkBrC,MAAM,CAACsC,MAAP,CAActC,MAAM,CAACsC,MAAP,CAAc,EAAd,EAAkB,KAAK5C,OAAL,CAAa6C,KAA/B,CAAd,EAAqDzB,KAArD,CAAlB;AACH;;AAxEc;;AA0EnBtB,YAAY,CAAChB,IAAb;AAAA,mBAAyGgB,YAAzG,EAnH+FzC,EAmH/F,mBAAuIS,IAAI,CAACgF,YAA5I;AAAA;;AACAhD,YAAY,CAACd,IAAb,kBApH+F3B,EAoH/F;AAAA,QAA6FyC,YAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aApH+FzC,EAoH/F;AAAA;AAAA;AAAA;AAAA;AAAA;AApH+FA,MAAAA,EAoH4Y,2DAA3e;AApH+FA,MAAAA,EAoH/F;AAAA;;AAAA;AApH+FA,MAAAA,EAoHkZ,oBApHlZA,EAoHkZ,+BAAjf;AAAA;AAAA;AAAA,eAAuwDY,EAAE,CAAC8E,WAA1wD,EAA0+DxE,YAA1+D,EAAgpEX,EAAE,CAACoF,IAAnpE,EAAiuEpF,EAAE,CAACqF,OAApuE;AAAA,UAAs1ErF,EAAE,CAACsF,SAAz1E;AAAA;AAAA;AAAA;;AACA;AAAA,qDArH+F7F,EAqH/F,mBAA2FyC,YAA3F,EAAqH,CAAC;AAC1GZ,IAAAA,IAAI,EAAE3B,SADoG;AAE1G4B,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,eAAZ;AAA6BC,MAAAA,eAAe,EAAE7B,uBAAuB,CAAC8B,MAAtE;AAA8EC,MAAAA,QAAQ,EAAE,uoCAAxF;AAAiuCC,MAAAA,MAAM,EAAE,CAAC,mHAAD;AAAzuC,KAAD;AAFoG,GAAD,CAArH,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAEN,MAAAA,IAAI,EAAEpB,IAAI,CAACgF;AAAb,KAAD,CAAP;AAAuC,GAHjF,EAGmG;AAAEnC,IAAAA,KAAK,EAAE,CAAC;AAC7FzB,MAAAA,IAAI,EAAEzB;AADuF,KAAD,CAAT;AAEnFkE,IAAAA,OAAO,EAAE,CAAC;AACVzC,MAAAA,IAAI,EAAEzB;AADI,KAAD,CAF0E;AAInFmE,IAAAA,OAAO,EAAE,CAAC;AACV1C,MAAAA,IAAI,EAAEzB;AADI,KAAD,CAJ0E;AAMnF8E,IAAAA,IAAI,EAAE,CAAC;AACPrD,MAAAA,IAAI,EAAEzB;AADC,KAAD,CAN6E;AAQnF0F,IAAAA,GAAG,EAAE,CAAC;AACNjE,MAAAA,IAAI,EAAEzB;AADA,KAAD,CAR8E;AAUnF2F,IAAAA,KAAK,EAAE,CAAC;AACRlE,MAAAA,IAAI,EAAEzB;AADE,KAAD,CAV4E;AAYnF4F,IAAAA,WAAW,EAAE,CAAC;AACdnE,MAAAA,IAAI,EAAEzB;AADQ,KAAD,CAZsE;AAcnF6F,IAAAA,KAAK,EAAE,CAAC;AACRpE,MAAAA,IAAI,EAAEzB;AADE,KAAD,CAd4E;AAgBnF8F,IAAAA,IAAI,EAAE,CAAC;AACPrE,MAAAA,IAAI,EAAEzB;AADC,KAAD,CAhB6E;AAkBnF+F,IAAAA,WAAW,EAAE,CAAC;AACdtE,MAAAA,IAAI,EAAEzB;AADQ,KAAD,CAlBsE;AAoBnFoD,IAAAA,QAAQ,EAAE,CAAC;AACX3B,MAAAA,IAAI,EAAEzB;AADK,KAAD,CApByE;AAsBnFqD,IAAAA,QAAQ,EAAE,CAAC;AACX5B,MAAAA,IAAI,EAAEzB;AADK,KAAD,CAtByE;AAwBnFgG,IAAAA,QAAQ,EAAE,CAAC;AACXvE,MAAAA,IAAI,EAAEzB;AADK,KAAD,CAxByE;AA0BnFsD,IAAAA,MAAM,EAAE,CAAC;AACT7B,MAAAA,IAAI,EAAExB;AADG,KAAD,CA1B2E;AA4BnFsD,IAAAA,MAAM,EAAE,CAAC;AACT9B,MAAAA,IAAI,EAAExB;AADG,KAAD;AA5B2E,GAHnG;AAAA;;AAmCA,MAAMgG,kBAAN,CAAyB;AACJ,SAAVC,UAAU,CAAC/C,MAAD,EAAS;AACtB,WAAO;AACHgD,MAAAA,QAAQ,EAAEF,kBADP;AAEHG,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,OAAO,EAAE9F,oBAAX;AAAiC+F,QAAAA,QAAQ,EAAEnD;AAA3C,OAAD;AAFR,KAAP;AAIH;;AANoB;;AAQzB8C,kBAAkB,CAAC5E,IAAnB;AAAA,mBAA+G4E,kBAA/G;AAAA;;AACAA,kBAAkB,CAACM,IAAnB,kBAjK+F3G,EAiK/F;AAAA,QAAgHqG;AAAhH;AAIAA,kBAAkB,CAACO,IAAnB,kBArK+F5G,EAqK/F;AAAA,YAA8I,CAClIa,iBADkI,EAElIL,YAFkI,CAA9I,EAGWK,iBAHX;AAAA;;AAIA;AAAA,qDAzK+Fb,EAyK/F,mBAA2FqG,kBAA3F,EAA2H,CAAC;AAChHxE,IAAAA,IAAI,EAAEvB,QAD0G;AAEhHwB,IAAAA,IAAI,EAAE,CAAC;AACC+E,MAAAA,YAAY,EAAE,CACVpE,YADU,EAEVvB,YAFU,CADf;AAKC4F,MAAAA,OAAO,EAAE,CACLjG,iBADK,EAELL,YAFK,CALV;AASCuG,MAAAA,OAAO,EAAE,CACLlG,iBADK,EAEL4B,YAFK;AATV,KAAD;AAF0G,GAAD,CAA3H;AAAA;AAkBA;AACA;AACA;;;AAEA,SAASA,YAAT,EAAuB4D,kBAAvB","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from 'ngx-sharebuttons';\nimport { SHARE_BUTTONS, SHARE_BUTTONS_CONFIG } from 'ngx-sharebuttons';\nimport * as i2 from 'ngx-sharebuttons/button';\nimport { ShareButtonModule } from 'ngx-sharebuttons/button';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i1 from '@fortawesome/angular-fontawesome';\n\nclass ExpandButton {\n    constructor(el) {\n        this.toggle = new EventEmitter();\n        el.nativeElement.style.setProperty('--button-color', '#FF6651');\n    }\n}\nExpandButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: ExpandButton, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nExpandButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: ExpandButton, selector: \"expand-button\", inputs: { moreIcon: \"moreIcon\", lessIcon: \"lessIcon\", expanded: \"expanded\", moreAriaLabel: \"moreAriaLabel\", lessAriaLabel: \"lessAriaLabel\" }, outputs: { toggle: \"toggle\" }, ngImport: i0, template: `\n    <button class=\"sb-wrapper sb-expand sb-show-icon\"\n            [attr.aria-label]=\"expanded ? lessAriaLabel : moreAriaLabel\"\n            (click)=\"toggle.emit(!expanded)\">\n\n      <div class=\"sb-content\">\n        <div class=\"sb-icon\">\n          <fa-icon [icon]=\"expanded ? lessIcon : moreIcon\"></fa-icon>\n        </div>\n      </div>\n    </button>\n  `, isInline: true, styles: [\":host-context([button=facebook]){--button-color: #4267B2}:host-context([button=twitter]){--button-color: #00acee}:host-context([button=google]){--button-color: #db4437}:host-context([button=mix]){--button-color: #ff8226}:host-context([button=line]){--button-color: #00b900}:host-context([button=linkedin]){--button-color: #006fa6}:host-context([button=pinterest]){--button-color: #bd081c}:host-context([button=reddit]){--button-color: #ff4006}:host-context([button=tumblr]){--button-color: #36465d}:host-context([button=whatsapp]){--button-color: #25d366}:host-context([button=messenger]){--button-color: #0080FF}:host-context([button=telegram]){--button-color: #0088cc}:host-context([button=xing]){--button-color: #006567}:host-context([button=sms]){--button-color: #20c16c}:host-context([button=email]){--button-color: #FF961C}:host-context([button=viber]){--button-color: #665ca7}:host-context([button=vk]){--button-color: #4C75A3}:host-context([button=copy]){--button-color: #607D8B}:host-context([button=print]){--button-color: #765AA2}:host-context([button=expand]){--button-color: #FF6651}button{cursor:pointer;position:relative;outline:0;-webkit-print-color-adjust:exact;margin:.3125em;margin:var(--sb-margin, .3125em);padding:0;padding:var(--sb-padding, 0);min-width:4.125em;min-width:var(--sb-min-width, 4.125em);height:2.5em;height:var(--sb-height, 2.5em);color:#fff;color:var(--sb-color, #fff);background:var(--sb-background);font-size:13px;font-size:var(--sb-font-size, 13px);line-height:2.571em;line-height:var(--sb-line-height, 2.571em);border:var(--sb-border);border-radius:var(--sb-border-radius);transition:var(--sb-transition);box-shadow:var(--sb-box-shadow);text-shadow:var(--sb-text-shadow);overflow:var(--sb-overflow)}.sb-icon,.sb-text{display:flex;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;user-select:none}.sb-content{flex:1;display:flex;height:100%;width:100%;position:relative}.sb-text{flex:1;height:100%;white-space:nowrap;padding:0 .7em;padding:var(--sb-text-padding, 0 .7em);font-weight:700;font-weight:var(--sb-font-weight, bold)}.sb-icon{text-align:center;width:100%;height:100%;min-width:2em;font-size:1.2em;font-size:var(--sb-icon-size, 1.2em)}\\n\"], components: [{ type: i1.FaIconComponent, selector: \"fa-icon\", inputs: [\"icon\", \"title\", \"spin\", \"pulse\", \"mask\", \"styles\", \"flip\", \"size\", \"pull\", \"border\", \"inverse\", \"symbol\", \"rotate\", \"fixedWidth\", \"classes\", \"transform\", \"a11yRole\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: ExpandButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'expand-button', changeDetection: ChangeDetectionStrategy.OnPush, template: `\n    <button class=\"sb-wrapper sb-expand sb-show-icon\"\n            [attr.aria-label]=\"expanded ? lessAriaLabel : moreAriaLabel\"\n            (click)=\"toggle.emit(!expanded)\">\n\n      <div class=\"sb-content\">\n        <div class=\"sb-icon\">\n          <fa-icon [icon]=\"expanded ? lessIcon : moreIcon\"></fa-icon>\n        </div>\n      </div>\n    </button>\n  `, styles: [\":host-context([button=facebook]){--button-color: #4267B2}:host-context([button=twitter]){--button-color: #00acee}:host-context([button=google]){--button-color: #db4437}:host-context([button=mix]){--button-color: #ff8226}:host-context([button=line]){--button-color: #00b900}:host-context([button=linkedin]){--button-color: #006fa6}:host-context([button=pinterest]){--button-color: #bd081c}:host-context([button=reddit]){--button-color: #ff4006}:host-context([button=tumblr]){--button-color: #36465d}:host-context([button=whatsapp]){--button-color: #25d366}:host-context([button=messenger]){--button-color: #0080FF}:host-context([button=telegram]){--button-color: #0088cc}:host-context([button=xing]){--button-color: #006567}:host-context([button=sms]){--button-color: #20c16c}:host-context([button=email]){--button-color: #FF961C}:host-context([button=viber]){--button-color: #665ca7}:host-context([button=vk]){--button-color: #4C75A3}:host-context([button=copy]){--button-color: #607D8B}:host-context([button=print]){--button-color: #765AA2}:host-context([button=expand]){--button-color: #FF6651}button{cursor:pointer;position:relative;outline:0;-webkit-print-color-adjust:exact;margin:.3125em;margin:var(--sb-margin, .3125em);padding:0;padding:var(--sb-padding, 0);min-width:4.125em;min-width:var(--sb-min-width, 4.125em);height:2.5em;height:var(--sb-height, 2.5em);color:#fff;color:var(--sb-color, #fff);background:var(--sb-background);font-size:13px;font-size:var(--sb-font-size, 13px);line-height:2.571em;line-height:var(--sb-line-height, 2.571em);border:var(--sb-border);border-radius:var(--sb-border-radius);transition:var(--sb-transition);box-shadow:var(--sb-box-shadow);text-shadow:var(--sb-text-shadow);overflow:var(--sb-overflow)}.sb-icon,.sb-text{display:flex;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;user-select:none}.sb-content{flex:1;display:flex;height:100%;width:100%;position:relative}.sb-text{flex:1;height:100%;white-space:nowrap;padding:0 .7em;padding:var(--sb-text-padding, 0 .7em);font-weight:700;font-weight:var(--sb-font-weight, bold)}.sb-icon{text-align:center;width:100%;height:100%;min-width:2em;font-size:1.2em;font-size:var(--sb-icon-size, 1.2em)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { moreIcon: [{\n                type: Input\n            }], lessIcon: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], moreAriaLabel: [{\n                type: Input\n            }], lessAriaLabel: [{\n                type: Input\n            }], toggle: [{\n                type: Output\n            }] } });\n\nclass ShareButtons {\n    constructor(_share) {\n        this._share = _share;\n        this._state$ = new BehaviorSubject({\n            includedButtons: [],\n            excludedButtons: [],\n            userButtons: [],\n            selectedButtons: [],\n            expanded: true,\n            shownCount: Object.keys(SHARE_BUTTONS).length\n        });\n        this._configSub$ = Subscription.EMPTY;\n        this.theme = this._share.config.theme;\n        /** Show buttons icons */\n        this.showIcon = true;\n        /** Show buttons text */\n        this.showText = false;\n        /** Share dialog opened event */\n        this.opened = new EventEmitter();\n        /** Share dialog closed event */\n        this.closed = new EventEmitter();\n    }\n    ngOnInit() {\n        this.state$ = this._state$.pipe(map((state) => {\n            // Use component include buttons, otherwise fallback to global include buttons\n            const includedButtons = state.includedButtons && state.includedButtons.length ? state.includedButtons : state.userButtons;\n            const userButtons = state.excludedButtons ? includedButtons.filter((btn) => state.excludedButtons.indexOf(btn) < 0) : includedButtons;\n            const selectedButtons = userButtons.slice(0, state.expanded ? userButtons.length : state.shownCount);\n            return {\n                userButtons,\n                selectedButtons,\n                expanded: state.expanded,\n                shownCount: state.shownCount,\n                moreIcon: state.moreIcon,\n                lessIcon: state.lessIcon,\n                moreAriaLabel: state.moreAriaLabel,\n                lessAriaLabel: state.lessAriaLabel\n            };\n        }));\n        // Subscribe to share buttons config changes, This updates the component whenever a new button is added\n        this._configSub$ = this._share.config$.subscribe((config) => {\n            // Use global include buttons, otherwise fallback to all buttons\n            const includedButtons = config.include.length ? config.include : Object.keys(SHARE_BUTTONS);\n            const userButtons = includedButtons.filter((btn) => config.exclude.indexOf(btn) < 0);\n            this.updateState({\n                userButtons,\n                expanded: false,\n                moreIcon: config.moreButtonIcon,\n                lessIcon: config.lessButtonIcon,\n                moreAriaLabel: config.moreButtonAriaLabel,\n                lessAriaLabel: config.lessButtonAriaLabel\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const shouldUpdate = (changes['include'] && changes['include'].currentValue !== changes['include'].previousValue) ||\n            (changes['exclude'] && changes['exclude'].currentValue !== changes['exclude'].previousValue) ||\n            (changes['show'] && changes['show'].currentValue !== changes['show'].previousValue);\n        if (shouldUpdate) {\n            this.updateState({\n                includedButtons: this.include,\n                excludedButtons: this.exclude,\n                shownCount: this.show\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._configSub$.unsubscribe();\n        this._state$.complete();\n    }\n    updateState(state) {\n        this._state$.next(Object.assign(Object.assign({}, this._state$.value), state));\n    }\n}\nShareButtons.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: ShareButtons, deps: [{ token: i1$1.ShareService }], target: i0.ɵɵFactoryTarget.Component });\nShareButtons.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: ShareButtons, selector: \"share-buttons\", inputs: { theme: \"theme\", include: \"include\", exclude: \"exclude\", show: \"show\", url: \"url\", title: \"title\", description: \"description\", image: \"image\", tags: \"tags\", autoSetMeta: \"autoSetMeta\", showIcon: \"showIcon\", showText: \"showText\", disabled: \"disabled\" }, outputs: { opened: \"opened\", closed: \"closed\" }, usesOnChanges: true, ngImport: i0, template: \"<div *ngIf=\\\"state$ | async; let state\\\" class=\\\"sb-group sb-{{theme}}\\\">\\n  <share-button *ngFor=\\\"let button of state.selectedButtons\\\"\\n                [button]=\\\"button\\\"\\n                [theme]=\\\"theme\\\"\\n                [url]=\\\"url\\\"\\n                [title]=\\\"title\\\"\\n                [description]=\\\"description\\\"\\n                [image]=\\\"image\\\"\\n                [tags]=\\\"tags\\\"\\n                [autoSetMeta]=\\\"autoSetMeta\\\"\\n                [showIcon]=\\\"showIcon\\\"\\n                [showText]=\\\"showText\\\"\\n                (opened)=\\\"opened.emit($event)\\\"\\n                (closed)=\\\"closed.emit($event)\\\"\\n                [disabled]=\\\"disabled\\\">\\n  </share-button>\\n  <expand-button *ngIf=\\\"state.shownCount < state.userButtons.length\\\"\\n                 class=\\\"sb-button sb-{{theme}}\\\"\\n                 [expanded]=\\\"state.expanded\\\"\\n                 [moreIcon]=\\\"state.moreIcon\\\"\\n                 [lessIcon]=\\\"state.lessIcon\\\"\\n                 [moreAriaLabel]=\\\"state.moreAriaLabel\\\"\\n                 [lessAriaLabel]=\\\"state.lessAriaLabel\\\"\\n                 (toggle)=\\\"updateState({expanded: $event})\\\">\\n  </expand-button>\\n</div>\\n\", styles: [\":host{display:inherit}.sb-group,.sb-button{display:inline-flex;align-items:flex-start}.sb-group{flex-wrap:wrap}\\n\"], components: [{ type: i2.ShareButton, selector: \"share-button\", inputs: [\"button\", \"url\", \"title\", \"description\", \"image\", \"tags\", \"autoSetMeta\", \"showIcon\", \"showText\", \"text\", \"icon\", \"theme\", \"disabled\"], outputs: [\"opened\", \"closed\"] }, { type: ExpandButton, selector: \"expand-button\", inputs: [\"moreIcon\", \"lessIcon\", \"expanded\", \"moreAriaLabel\", \"lessAriaLabel\"], outputs: [\"toggle\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], pipes: { \"async\": i4.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: ShareButtons, decorators: [{\n            type: Component,\n            args: [{ selector: 'share-buttons', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div *ngIf=\\\"state$ | async; let state\\\" class=\\\"sb-group sb-{{theme}}\\\">\\n  <share-button *ngFor=\\\"let button of state.selectedButtons\\\"\\n                [button]=\\\"button\\\"\\n                [theme]=\\\"theme\\\"\\n                [url]=\\\"url\\\"\\n                [title]=\\\"title\\\"\\n                [description]=\\\"description\\\"\\n                [image]=\\\"image\\\"\\n                [tags]=\\\"tags\\\"\\n                [autoSetMeta]=\\\"autoSetMeta\\\"\\n                [showIcon]=\\\"showIcon\\\"\\n                [showText]=\\\"showText\\\"\\n                (opened)=\\\"opened.emit($event)\\\"\\n                (closed)=\\\"closed.emit($event)\\\"\\n                [disabled]=\\\"disabled\\\">\\n  </share-button>\\n  <expand-button *ngIf=\\\"state.shownCount < state.userButtons.length\\\"\\n                 class=\\\"sb-button sb-{{theme}}\\\"\\n                 [expanded]=\\\"state.expanded\\\"\\n                 [moreIcon]=\\\"state.moreIcon\\\"\\n                 [lessIcon]=\\\"state.lessIcon\\\"\\n                 [moreAriaLabel]=\\\"state.moreAriaLabel\\\"\\n                 [lessAriaLabel]=\\\"state.lessAriaLabel\\\"\\n                 (toggle)=\\\"updateState({expanded: $event})\\\">\\n  </expand-button>\\n</div>\\n\", styles: [\":host{display:inherit}.sb-group,.sb-button{display:inline-flex;align-items:flex-start}.sb-group{flex-wrap:wrap}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i1$1.ShareService }]; }, propDecorators: { theme: [{\n                type: Input\n            }], include: [{\n                type: Input\n            }], exclude: [{\n                type: Input\n            }], show: [{\n                type: Input\n            }], url: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], description: [{\n                type: Input\n            }], image: [{\n                type: Input\n            }], tags: [{\n                type: Input\n            }], autoSetMeta: [{\n                type: Input\n            }], showIcon: [{\n                type: Input\n            }], showText: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], opened: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }] } });\n\nclass ShareButtonsModule {\n    static withConfig(config) {\n        return {\n            ngModule: ShareButtonsModule,\n            providers: [{ provide: SHARE_BUTTONS_CONFIG, useValue: config }]\n        };\n    }\n}\nShareButtonsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: ShareButtonsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nShareButtonsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: ShareButtonsModule, declarations: [ShareButtons,\n        ExpandButton], imports: [ShareButtonModule,\n        CommonModule], exports: [ShareButtonModule,\n        ShareButtons] });\nShareButtonsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: ShareButtonsModule, imports: [[\n            ShareButtonModule,\n            CommonModule\n        ], ShareButtonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: ShareButtonsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ShareButtons,\n                        ExpandButton\n                    ],\n                    imports: [\n                        ShareButtonModule,\n                        CommonModule\n                    ],\n                    exports: [\n                        ShareButtonModule,\n                        ShareButtons\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ShareButtons, ShareButtonsModule };\n"]},"metadata":{},"sourceType":"module"}